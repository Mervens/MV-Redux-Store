{"ast":null,"code":"import { UPDATE_PRODUCTS, ADD_TO_CART, UPDATE_CART_QUANTITY, REMOVE_FROM_CART, ADD_MULTIPLE_TO_CART, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, CLEAR_CART, TOGGLE_CART } from \"./actions\";\nconst initialState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: ''\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n\n    case ADD_TO_CART:\n      return { ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return { ...state,\n        cart: [...state.cart, ...action.products]\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return { ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n\n          return product;\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return { ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return { ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Jokah/Desktop/Projects/MV Redux Store/client/src/utils/reducers.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","ADD_MULTIPLE_TO_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CLEAR_CART","TOGGLE_CART","initialState","products","cart","cartOpen","categories","currentCategory","reducer","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length"],"mappings":"AAAA,SACEA,eADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,uBAPF,EAQEC,UARF,EASEC,WATF,QAUO,WAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,eAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELN,QAAAA,QAAQ,EAAE,CAAC,GAAGO,MAAM,CAACP,QAAX;AAFL,OAAP;;AAKF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELJ,QAAAA,QAAQ,EAAE,IAFL;AAGLD,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACE,OAAvB;AAHD,OAAP;;AAMF,SAAKf,oBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgB,GAAGM,MAAM,CAACP,QAA1B;AAFD,OAAP;;AAKF,SAAKR,oBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,QAAQ,EAAE,IAFL;AAGLD,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWS,GAAX,CAAeD,OAAO,IAAI;AAC9B,cAAIF,MAAM,CAACI,GAAP,KAAeF,OAAO,CAACE,GAA3B,EAAgC;AAC9BF,YAAAA,OAAO,CAACG,gBAAR,GAA2BL,MAAM,CAACK,gBAAlC;AACD;;AACD,iBAAOH,OAAP;AACD,SALK;AAHD,OAAP;;AAWF,SAAKhB,gBAAL;AACE,UAAIoB,QAAQ,GAAGP,KAAK,CAACL,IAAN,CAAWa,MAAX,CAAkBL,OAAO,IAAI;AAC1C,eAAOA,OAAO,CAACE,GAAR,KAAgBJ,MAAM,CAACI,GAA9B;AACD,OAFc,CAAf;AAIA,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,QAAQ,EAAEW,QAAQ,CAACE,MAAT,GAAkB,CAFvB;AAGLd,QAAAA,IAAI,EAAEY;AAHD,OAAP;;AAMF,SAAKhB,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,QAAQ,EAAE,KAFL;AAGLD,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAMF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,QAAQ,EAAE,CAACI,KAAK,CAACJ;AAFZ,OAAP;;AAKF,SAAKP,iBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,UAAU,EAAE,CAAC,GAAGI,MAAM,CAACJ,UAAX;AAFP,OAAP;;AAKF,SAAKP,uBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,eAAe,EAAEG,MAAM,CAACH;AAFnB,OAAP;;AAKF;AACE,aAAOE,KAAP;AArEJ;AAuED,CAxEM;AA0EP,eAAeD,OAAf","sourcesContent":["import {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  cart: [],\r\n  cartOpen: false,\r\n  categories: [],\r\n  currentCategory: '',\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}